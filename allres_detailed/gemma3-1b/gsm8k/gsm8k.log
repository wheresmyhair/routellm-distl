INFO 04-10 21:01:08 [__init__.py:239] Automatically detected platform cuda.
INFO:lm_eval.__main__:Selected Tasks: ['gsm8k']
INFO:lm_eval.evaluator:Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234 | Setting fewshot manual seed to 1234
INFO:lm_eval.evaluator:Initializing vllm model, with arguments: {'pretrained': 'google/gemma-3-1b-it'}
INFO 04-10 21:01:19 [config.py:604] This model supports multiple tasks: {'score', 'reward', 'classify', 'embed', 'generate'}. Defaulting to 'generate'.
INFO 04-10 21:01:19 [config.py:1797] Chunked prefill is enabled with max_num_batched_tokens=16384.
WARNING 04-10 21:01:21 [utils.py:2289] We must use the `spawn` multiprocessing start method. Overriding VLLM_WORKER_MULTIPROC_METHOD to 'spawn'. See https://docs.vllm.ai/en/latest/getting_started/troubleshooting.html#python-multiprocessing for more information. Reason: CUDA is initialized
INFO 04-10 21:01:26 [__init__.py:239] Automatically detected platform cuda.
INFO 04-10 21:01:27 [core.py:61] Initializing a V1 LLM engine (v0.8.3rc2.dev107+g0d4d06fe2) with config: model='google/gemma-3-1b-it', speculative_config=None, tokenizer='google/gemma-3-1b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=1234, served_model_name=google/gemma-3-1b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":3,"custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":512}
WARNING 04-10 21:01:27 [utils.py:2429] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7fe14c8621d0>
INFO 04-10 21:01:28 [parallel_state.py:957] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 04-10 21:01:28 [cuda.py:221] Using Flash Attention backend on V1 engine.
INFO 04-10 21:01:28 [gpu_model_runner.py:1277] Starting to load model google/gemma-3-1b-it...
INFO 04-10 21:01:28 [topk_topp_sampler.py:44] Currently, FlashInfer top-p & top-k sampling sampler is disabled because FlashInfer>=v0.2.3 is not backward compatible. Falling back to the PyTorch-native implementation of top-p & top-k sampling.
INFO 04-10 21:01:28 [weight_utils.py:265] Using model weights format ['*.safetensors']
INFO 04-10 21:01:29 [weight_utils.py:315] No model.safetensors.index.json found in remote.
Loading safetensors checkpoint shards:   0% Completed | 0/1 [00:00<?, ?it/s]
Loading safetensors checkpoint shards: 100% Completed | 1/1 [00:00<00:00,  3.10it/s]
Loading safetensors checkpoint shards: 100% Completed | 1/1 [00:00<00:00,  3.10it/s]

INFO 04-10 21:01:29 [loader.py:458] Loading weights took 0.37 seconds
INFO 04-10 21:01:29 [gpu_model_runner.py:1292] Model loading took 1.9150 GiB and 0.736920 seconds
INFO 04-10 21:01:35 [backends.py:416] Using cache directory: /home/yizhenjia/.cache/vllm/torch_compile_cache/264b03d1aa/rank_0_0 for vLLM's torch.compile
INFO 04-10 21:01:35 [backends.py:426] Dynamo bytecode transform time: 5.58 s
INFO 04-10 21:01:35 [backends.py:115] Directly load the compiled graph for shape None from the cache
INFO 04-10 21:01:44 [monitor.py:33] torch.compile takes 5.58 s in total
INFO 04-10 21:01:44 [kv_cache_utils.py:634] GPU KV cache size: 2,379,056 tokens
INFO 04-10 21:01:44 [kv_cache_utils.py:637] Maximum concurrency for 32,768 tokens per request: 72.60x
INFO 04-10 21:02:06 [gpu_model_runner.py:1627] Graph capturing finished in 21 secs, took 1.66 GiB
INFO 04-10 21:02:06 [core.py:162] init engine (profile, create kv cache, warmup model) took 36.77 seconds
INFO 04-10 21:02:06 [core_client.py:435] Core engine process 0 ready.
INFO:lm_eval.models.vllm_causallms:Found 'gemma' in model name, a BOS token will be used as Gemma series models underperform without it.
INFO:lm_eval.evaluator:gsm8k: Using gen_kwargs: {'until': ['Question:', '</s>', '<|im_end|>'], 'do_sample': False, 'temperature': 0.0}
WARNING:lm_eval.evaluator:Overwriting default num_fewshot of gsm8k from 5 to 0
INFO:lm_eval.api.task:Building contexts for gsm8k on rank 0...
  0%|          | 0/1319 [00:00<?, ?it/s] 31%|███       | 409/1319 [00:00<00:00, 4083.49it/s] 64%|██████▍   | 845/1319 [00:00<00:00, 4245.18it/s] 98%|█████████▊| 1292/1319 [00:00<00:00, 4344.59it/s]100%|██████████| 1319/1319 [00:00<00:00, 4304.82it/s]
INFO:lm_eval.evaluator:Running generate_until requests
Running generate_until requests:   0%|          | 0/1319 [00:00<?, ?it/s]Running generate_until requests:   0%|          | 1/1319 [00:00<21:46,  1.01it/s]Running generate_until requests:   3%|▎         | 33/1319 [00:02<01:17, 16.51it/s]Running generate_until requests:   5%|▍         | 65/1319 [00:03<00:53, 23.48it/s]Running generate_until requests:   7%|▋         | 97/1319 [00:04<00:44, 27.26it/s]Running generate_until requests:  10%|▉         | 129/1319 [00:05<00:40, 29.50it/s]Running generate_until requests:  12%|█▏        | 161/1319 [00:06<00:37, 30.96it/s]Running generate_until requests:  15%|█▍        | 193/1319 [00:07<00:35, 31.92it/s]Running generate_until requests:  17%|█▋        | 225/1319 [00:07<00:33, 32.57it/s]Running generate_until requests:  19%|█▉        | 257/1319 [00:08<00:32, 33.08it/s]Running generate_until requests:  22%|██▏       | 289/1319 [00:09<00:30, 33.41it/s]Running generate_until requests:  24%|██▍       | 321/1319 [00:10<00:29, 33.61it/s]Running generate_until requests:  27%|██▋       | 353/1319 [00:11<00:28, 33.75it/s]Running generate_until requests:  29%|██▉       | 385/1319 [00:12<00:27, 33.81it/s]Running generate_until requests:  32%|███▏      | 417/1319 [00:13<00:26, 33.91it/s]Running generate_until requests:  34%|███▍      | 449/1319 [00:14<00:25, 33.96it/s]Running generate_until requests:  36%|███▋      | 481/1319 [00:15<00:24, 34.03it/s]Running generate_until requests:  39%|███▉      | 513/1319 [00:16<00:23, 34.07it/s]Running generate_until requests:  41%|████▏     | 545/1319 [00:17<00:22, 34.12it/s]Running generate_until requests:  44%|████▎     | 577/1319 [00:18<00:21, 34.09it/s]Running generate_until requests:  46%|████▌     | 609/1319 [00:19<00:20, 34.11it/s]Running generate_until requests:  49%|████▊     | 641/1319 [00:20<00:19, 34.13it/s]Running generate_until requests:  51%|█████     | 673/1319 [00:21<00:18, 34.16it/s]Running generate_until requests:  53%|█████▎    | 705/1319 [00:22<00:17, 34.16it/s]Running generate_until requests:  56%|█████▌    | 737/1319 [00:22<00:17, 34.19it/s]Running generate_until requests:  58%|█████▊    | 769/1319 [00:23<00:16, 34.18it/s]Running generate_until requests:  61%|██████    | 801/1319 [00:24<00:15, 34.23it/s]Running generate_until requests:  63%|██████▎   | 833/1319 [00:25<00:14, 34.23it/s]Running generate_until requests:  66%|██████▌   | 865/1319 [00:26<00:13, 34.25it/s]Running generate_until requests:  68%|██████▊   | 897/1319 [00:27<00:12, 34.24it/s]Running generate_until requests:  70%|███████   | 929/1319 [00:28<00:11, 34.26it/s]Running generate_until requests:  73%|███████▎  | 961/1319 [00:29<00:10, 34.26it/s]Running generate_until requests:  75%|███████▌  | 993/1319 [00:30<00:09, 34.29it/s]Running generate_until requests:  78%|███████▊  | 1025/1319 [00:31<00:08, 34.23it/s]Running generate_until requests:  80%|████████  | 1057/1319 [00:32<00:07, 34.28it/s]Running generate_until requests:  83%|████████▎ | 1089/1319 [00:33<00:06, 34.28it/s]Running generate_until requests:  85%|████████▍ | 1121/1319 [00:34<00:05, 34.31it/s]Running generate_until requests:  87%|████████▋ | 1153/1319 [00:35<00:04, 34.29it/s]Running generate_until requests:  90%|████████▉ | 1185/1319 [00:36<00:03, 34.39it/s]Running generate_until requests:  92%|█████████▏| 1217/1319 [00:36<00:02, 34.36it/s]Running generate_until requests:  95%|█████████▍| 1249/1319 [00:37<00:02, 34.33it/s]Running generate_until requests:  97%|█████████▋| 1281/1319 [00:38<00:01, 34.30it/s]Running generate_until requests: 100%|█████████▉| 1313/1319 [00:39<00:00, 35.23it/s]Running generate_until requests: 100%|██████████| 1319/1319 [00:39<00:00, 33.26it/s]
[rank0]:[W410 21:02:57.540555820 ProcessGroupNCCL.cpp:1496] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
INFO:lm_eval.loggers.evaluation_tracker:Saving results aggregated
INFO:lm_eval.loggers.evaluation_tracker:Saving per-sample results for: gsm8k
vllm (pretrained=google/gemma-3-1b-it), gen_kwargs: (None), limit: None, num_fewshot: 0, batch_size: 32
|Tasks|Version|     Filter     |n-shot|  Metric   |   |Value |   |Stderr|
|-----|------:|----------------|-----:|-----------|---|-----:|---|-----:|
|gsm8k|      3|flexible-extract|     0|exact_match|↑  |0.0311|±  |0.0048|
|     |       |strict-match    |     0|exact_match|↑  |0.0000|±  |0.0000|

