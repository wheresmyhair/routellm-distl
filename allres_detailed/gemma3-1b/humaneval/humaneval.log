INFO 04-10 21:03:29 [__init__.py:239] Automatically detected platform cuda.
INFO:lm_eval.__main__:Selected Tasks: ['humaneval']
INFO:lm_eval.evaluator:Setting random seed to 0 | Setting numpy seed to 1234 | Setting torch manual seed to 1234 | Setting fewshot manual seed to 1234
INFO:lm_eval.evaluator:Initializing vllm model, with arguments: {'pretrained': 'google/gemma-3-1b-it'}
INFO 04-10 21:03:39 [config.py:604] This model supports multiple tasks: {'classify', 'generate', 'embed', 'score', 'reward'}. Defaulting to 'generate'.
INFO 04-10 21:03:39 [config.py:1797] Chunked prefill is enabled with max_num_batched_tokens=16384.
WARNING 04-10 21:03:41 [utils.py:2289] We must use the `spawn` multiprocessing start method. Overriding VLLM_WORKER_MULTIPROC_METHOD to 'spawn'. See https://docs.vllm.ai/en/latest/getting_started/troubleshooting.html#python-multiprocessing for more information. Reason: CUDA is initialized
INFO 04-10 21:03:46 [__init__.py:239] Automatically detected platform cuda.
INFO 04-10 21:03:48 [core.py:61] Initializing a V1 LLM engine (v0.8.3rc2.dev107+g0d4d06fe2) with config: model='google/gemma-3-1b-it', speculative_config=None, tokenizer='google/gemma-3-1b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=1234, served_model_name=google/gemma-3-1b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":3,"custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":512}
WARNING 04-10 21:03:48 [utils.py:2429] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f56e17d21d0>
INFO 04-10 21:03:49 [parallel_state.py:957] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 04-10 21:03:49 [cuda.py:221] Using Flash Attention backend on V1 engine.
INFO 04-10 21:03:49 [gpu_model_runner.py:1277] Starting to load model google/gemma-3-1b-it...
INFO 04-10 21:03:49 [topk_topp_sampler.py:44] Currently, FlashInfer top-p & top-k sampling sampler is disabled because FlashInfer>=v0.2.3 is not backward compatible. Falling back to the PyTorch-native implementation of top-p & top-k sampling.
INFO 04-10 21:03:49 [weight_utils.py:265] Using model weights format ['*.safetensors']
INFO 04-10 21:03:49 [weight_utils.py:315] No model.safetensors.index.json found in remote.
Loading safetensors checkpoint shards:   0% Completed | 0/1 [00:00<?, ?it/s]
Loading safetensors checkpoint shards: 100% Completed | 1/1 [00:00<00:00,  3.12it/s]
Loading safetensors checkpoint shards: 100% Completed | 1/1 [00:00<00:00,  3.12it/s]

INFO 04-10 21:03:49 [loader.py:458] Loading weights took 0.37 seconds
INFO 04-10 21:03:50 [gpu_model_runner.py:1292] Model loading took 1.9150 GiB and 0.709150 seconds
INFO 04-10 21:03:55 [backends.py:416] Using cache directory: /home/yizhenjia/.cache/vllm/torch_compile_cache/264b03d1aa/rank_0_0 for vLLM's torch.compile
INFO 04-10 21:03:55 [backends.py:426] Dynamo bytecode transform time: 5.71 s
INFO 04-10 21:03:56 [backends.py:115] Directly load the compiled graph for shape None from the cache
INFO 04-10 21:04:04 [monitor.py:33] torch.compile takes 5.71 s in total
INFO 04-10 21:04:05 [kv_cache_utils.py:634] GPU KV cache size: 2,379,056 tokens
INFO 04-10 21:04:05 [kv_cache_utils.py:637] Maximum concurrency for 32,768 tokens per request: 72.60x
INFO 04-10 21:04:29 [gpu_model_runner.py:1627] Graph capturing finished in 23 secs, took 1.66 GiB
INFO 04-10 21:04:29 [core.py:162] init engine (profile, create kv cache, warmup model) took 38.88 seconds
INFO 04-10 21:04:29 [core_client.py:435] Core engine process 0 ready.
INFO:lm_eval.models.vllm_causallms:Found 'gemma' in model name, a BOS token will be used as Gemma series models underperform without it.
INFO:lm_eval.evaluator:humaneval: Using gen_kwargs: {'until': ['\nclass', '\ndef', '\n#', '\nif', '\nprint'], 'max_gen_toks': 1024, 'do_sample': False}
INFO:lm_eval.evaluator:num_fewshot has been set to 0 for humaneval in its config. Manual configuration will be ignored.
INFO:lm_eval.api.task:Building contexts for humaneval on rank 0...
  0%|          | 0/164 [00:00<?, ?it/s]100%|██████████| 164/164 [00:00<00:00, 4760.52it/s]
INFO:lm_eval.evaluator:Running generate_until requests
Running generate_until requests:   0%|          | 0/164 [00:00<?, ?it/s]Running generate_until requests:   1%|          | 1/164 [00:04<11:41,  4.30s/it]Running generate_until requests:  20%|██        | 33/164 [00:08<00:27,  4.76it/s]Running generate_until requests:  40%|███▉      | 65/164 [00:12<00:15,  6.34it/s]Running generate_until requests:  59%|█████▉    | 97/164 [00:15<00:09,  7.13it/s]Running generate_until requests:  79%|███████▊  | 129/164 [00:19<00:04,  7.56it/s]Running generate_until requests:  98%|█████████▊| 161/164 [00:23<00:00,  8.17it/s]Running generate_until requests: 100%|██████████| 164/164 [00:23<00:00,  7.13it/s]
[rank0]:[W410 21:05:07.220795970 ProcessGroupNCCL.cpp:1496] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
INFO:lm_eval.loggers.evaluation_tracker:Saving results aggregated
INFO:lm_eval.loggers.evaluation_tracker:Saving per-sample results for: humaneval
vllm (pretrained=google/gemma-3-1b-it), gen_kwargs: (None), limit: None, num_fewshot: 0, batch_size: 32
|  Tasks  |Version|  Filter   |n-shot|Metric|   |Value |   |Stderr|
|---------|------:|-----------|-----:|------|---|-----:|---|-----:|
|humaneval|      1|create_test|     0|pass@1|   |0.0061|±  |0.0061|

